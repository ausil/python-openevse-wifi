name: Run Tests
on: push

jobs:
  pytest:
    name: pytest
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Install
      uses: abatilo/actions-poetry@v1.5.0
      with:
        python_version: 3.8.0
        poetry_version: 0.12.17
        args: install
    - name: Run pytest
      uses: abatilo/actions-poetry@v1.5.0
      with:
        python_version: 3.8.0
        poetry_version: 0.12.17
        args: run python -m pytest --cov=openevsewifi --cov-report=xml --cov-branch --cov-fail-under=85 tests/
    - name: Codecov
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml # optional
  release:
    if: startsWith(github.ref, 'refs/tags/v')
    name: Create Release
    needs: [pytest]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Install
      uses: abatilo/actions-poetry@v1.5.0
      with:
        python_version: 3.8.0
        poetry_version: 0.12.17
        args: install --no-dev
    - name: Build
      uses: abatilo/actions-poetry@v1.5.0
      with:
        python_version: 3.8.0
        poetry_version: 0.12.17
        args: build
    - name: Publish Beta to GitHub
      uses: softprops/action-gh-release@v0.1.5
      if: contains(github.ref, 'beta')
      with:
        files: dist/*.tar.gz
        prerelease: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Publish Beta to TestPyPI
      if: contains(github.ref, 'beta')
      env:
        POETRY_PYPI_TOKEN_TESTPYPI: ${{ secrets.TEST_PYPI_TOKEN }}
      run: |
        poetry config repositories.testpypi https://test.pypi.org/legacy/
        poetry publish -r testpypi
    - name: Publish Production Release to GitHub
      uses: softprops/action-gh-release@v0.1.5
      if: contains(github.ref, 'beta') == false
      with:
        files: dist/*.tar.gz
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Publish Production Release to PyPI
      if: contains(github.ref, 'beta') == false
      env: 
        POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
      run: |
        poetry publish
